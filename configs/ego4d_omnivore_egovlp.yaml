dataset_name: ego4d
train_split: ['training']
val_split: ['validation']
dataset: {
  # json_file: ./data/ego4d/annotations/ego4d.json,
  # feat_folder: [
  #   './data/ego4d/omnivore_features', 
  #   './data/ego4d/egovlp_features'
  # ],
  # converted json&features
  json_file: /ssd1/yj/ego4d/converted/annotations/ego4d.json,
  feat_folder: [
    '/ssd1/yj/ego4d/converted/features/omnivore_features', 
    '/ssd1/yj/ego4d/converted/features/egovlp_to_omnivore_slowfast_features'
  ],
  file_prefix: ~,
  file_ext: .npy,
  num_classes: 110,
  input_dim: 1792,
  feat_stride: 16,
  num_frames: 32,
  default_fps: 30,
  trunc_thresh: 0.3,
  crop_ratio: [0.9, 1.0],
  max_seq_len: 1024,
}
model: {
  regression_range: [
    [0, 4], 
    [2, 8], 
    [4, 16], 
    [8, 32], 
    [16, 64], 
    [32, 128], 
    [64, 256],
    [128, 10000]
  ],
  fpn_type: identity,
  backbone_arch: [2, 2, 7],
  max_buffer_len_factor: 4.0,
  n_mha_win_size: 9,
  n_head: 12,
  embd_dim: 768,
  fpn_dim: 768,
  head_dim: 768,
  use_abs_pe: true,
}
opt: {
  learning_rate: 1.e-4,
  epochs: 10,
  weight_decay: 0.05,
}
loader: {
  batch_size: 2,
}
train_cfg: {
  init_loss_norm: 100,
  clip_grad_l2norm: 1.0,
  cls_prior_prob: 0.01,
  center_sample: radius,
  center_sample_radius: 1.5,
  dropout: 0.1,
  droppath: 0.1,
}
test_cfg: {
  pre_nms_topk: 5000,
  max_seg_num: 2000,
  min_score: 0.001,
  nms_sigma: 0.9,
  multiclass_nms: True,
  voting_thresh: 0.95,
}
output_folder: ./ckpt/
